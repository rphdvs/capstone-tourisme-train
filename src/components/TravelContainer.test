// TravelContainer.js
import { SearchControls } from "./SearchControls";
import { DestinationCard } from "./DestinationCard";
// L'import de DestinationDetailView n'est plus nécessaire ici

// Les icônes
const ChevronLeft = () => <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M15 19l-7-7 7-7"></path></svg>;
const ChevronRight = () => <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 5l7 7-7 7"></path></svg>;

export default function TravelContainer({
  title,
  budget,
  onBudgetChange,
  destinations,
  allFilteredDestinations,
  currentPage,
  totalPages,
  onPageChange,
  startLocation,
  onLocationChange,
  isReduced, // La prop qui contrôle le mode réduit
  onDestinationSelect,
  onFilterClick
}) {

  return (
    // Le conteneur change de largeur et de contenu
    <div className={`
      ${isReduced ? 'w-[120px]' : 'w-[400px]'} h-[720px] 
      bg-white rounded-xl shadow-lg font-sans flex flex-col 
      transition-all duration-300 ease-in-out
    `}>
      
      {/* On utilise un rendu conditionnel pour afficher soit la vue complète, soit la vue réduite */}
      {isReduced ? (
        // ## VUE RÉDUITE MODIFIÉE ##
        <>
          <div className="p-4 text-center border-b border-gray-200">
            <p className="text-xs font-semibold text-gray-500 uppercase tracking-wider">Budget Max</p>
            <p className="text-3xl font-bold text-blue-600 mt-1">{budget}€</p>
          </div>
          
          <div className="flex-grow overflow-y-auto">
            {allFilteredDestinations.map(dest => (
              // 2. On transforme chaque prix en un bouton
              <button 
                key={dest.id} 
                // 3. Au clic, on appelle la fonction du parent avec la destination correspondante
                onClick={() => onDestinationSelect(dest)}
                className="w-full block py-3 text-center text-lg text-gray-700 border-b border-gray-100 last:border-b-0 hover:bg-gray-100 transition-colors"
              >
                {dest.price}€
              </button>
            ))}
          </div>
        </>
      ) : (
        
        // ## VUE COMPLÈTE (INCHANGÉE) ##
        <>
          <h2 className="text-xl font-bold text-center p-4 text-gray-800">{title}</h2>
          
          <SearchControls
            budget={budget}
            onBudgetChange={onBudgetChange}
            startLocation={startLocation}
            onLocationChange={onLocationChange}
            onFilterClick={onFilterClick}
          />

          <div className="flex-grow min-h-0 p-4">
            <div className={`flex flex-col gap-3 h-full ${destinations.length === 0 ? "justify-center" : ""}`}>
              {destinations.length > 0 ? (
                destinations.map(dest => (
                  <DestinationCard
                    key={dest.id}
                    cityName={dest.city}
                    price={dest.price}
                    imageUrl={dest.img}
                  />
                ))
              ) : (
                <p className="text-center text-gray-500 text-sm">
                  Aucune destination disponible...
                </p>
              )}
            </div>
          </div>
          
          {totalPages > 1 && (
            <div className="flex items-center justify-between px-4 pb-4">
              <button onClick={() => onPageChange(prev => prev - 1)} disabled={currentPage === 0} className="p-2 rounded-full bg-gray-200 hover:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed">
                <ChevronLeft />
              </button>
              <span className="text-sm font-semibold text-gray-600">
                Page {currentPage + 1} / {totalPages}
              </span>
              <button onClick={() => onPageChange(prev => prev + 1)} disabled={currentPage + 1 >= totalPages} className="p-2 rounded-full bg-gray-200 hover:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed">
                <ChevronRight />
              </button>
            </div>
          )}
        </>
      )}
    </div>
  );
}